name: beta

on:
  push:
    branches:
      - master
  workflow_dispatch: {  }

jobs:
  build:
    if: startsWith(github.event.head_commit.message, '[beta]')
    runs-on: ubuntu-latest
    env:
      VERSION: $( echo ${{ github.event.head_commit.id }} | cut -c1-7 )
      COMMIT: $( sed -E "s/(.*) <.*@.*>/\\1/g;t" <<< "${{ github.event.head_commit.message }}" | jq -Rsa . | tail -c +2 | head -c -2 )
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'

      - name: Cook KeyStore
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > $GITHUB_WORKSPACE/signing-key.jks

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          ./gradlew assembleFossBeta \
          -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/signing-key.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=key0 \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: foss-beta.apk
          path: app/build/outputs/**/*.apk

      - name: Upload APK to Discord
        shell: bash
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          APK_PATH=$(find app/build/outputs -name "*.apk" -print -quit)

          if [ -z "$APK_PATH" ]; then
            echo "Error: No APK file found in the build outputs directory."
            exit 1
          fi
          
          message=$(echo "New Rush beta **${{ env.VERSION }}**\n${{ env.COMMIT }}")
          curl -F "payload_json={\"content\":\"${message}\"}" \
          -F "rush_beta=@${APK_PATH}" \
          ${{ env.WEBHOOK }}