name: beta

on:
  push:
    branches:
      - master
  workflow_dispatch: { }

jobs:
  android:
    name: Build Beta APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Decode Keystore
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        run: echo "$KEYSTORE_FILE" | base64 --decode > $GITHUB_WORKSPACE/keystore.jks

      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x gradlew

      - name: Build Beta APK
        run: |
          ./gradlew assembleBeta \
          -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=key0 \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload Beta APK
        uses: actions/upload-artifact@v4
        with:
          name: beta-apk
          path: app/build/outputs/apk/beta/app-beta.apk

      - name: Upload APK to Discord
        shell: bash
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION: $( echo ${{ github.event.head_commit.id }} | cut -c1-7 )
          COMMIT: $( sed -E "s/(.*) <.*@.*>/\\1/g;t" <<< "${{ github.event.head_commit.message }}" | jq -Rsa . | tail -c +2 | head -c -2 )
        run: |
          message=$(echo "**${{ env.VERSION }}**\n${{ env.COMMIT }}\n[Download APK from GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})") 
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"$message\"}" ${{ env.WEBHOOK }}